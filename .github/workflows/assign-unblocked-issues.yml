# .github/workflows/assign-unblocked-issues.yml
name: Assign unblocked issues on close (Nexoroid)

on:
  issues:
    types: [closed]

permissions:
  contents: read
  issues: write

env:
  # Optional fallback if an unblocked issue has no assignees
  # DEFAULT_ASSIGNEE: "smcnab1"
  DEFAULT_ASSIGNEE: "smcnab1"

jobs:
  assign-unblocked:
    if: github.event.issue.pull_request == null
    runs-on: ubuntu-latest

    steps:
      - name: Create Nexoroid installation token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.NEXOROID_APP_ID }}
          private-key: ${{ secrets.NEXOROID_APP_PRIVATE_KEY }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Find issues this one was blocking
        id: blocked
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          owner="${GITHUB_REPOSITORY%/*}"
          repo="${GITHUB_REPOSITORY#*/}"
          issue_number="${{ github.event.issue.number }}"

          # List dependencies that were "blocked" by this issue
          resp="$(gh api \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            "/repos/$owner/$repo/issues/$issue_number/dependencies/blocking" \
          )"

          echo "$resp" | jq -c '.[]' > /tmp/blocked.json || true
          count="$(wc -l < /tmp/blocked.json || true)"
          echo "count=$count" >> "$GITHUB_OUTPUT"

      - name: Assign each newly unblocked issue (and remove 'blocked' label)
        if: steps.blocked.outputs.count != '0'
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          DEFAULT_ASSIGNEE: ${{ env.DEFAULT_ASSIGNEE }}
        run: |
          owner="${GITHUB_REPOSITORY%/*}"
          repo="${GITHUB_REPOSITORY#*/}"
          source_issue="${{ github.event.issue.number }}"

          while IFS= read -r row; do
            num=$(jq -r '.number' <<< "$row")
            state=$(jq -r '.state'   <<< "$row")

            if [ "$state" != "open" ]; then
              echo "Issue #$num is not open; skipping."
              continue
            fi

            issue_json="$(gh api -H 'X-GitHub-Api-Version: 2022-11-28' "/repos/$owner/$repo/issues/$num")"
            assignee_count=$(jq '.assignees | length' <<< "$issue_json")
            author=$(jq -r '.user.login'               <<< "$issue_json")

            if [ "$assignee_count" -gt 0 ]; then
              echo "Issue #$num already has assignees; skipping assignment."
            else
              target="${DEFAULT_ASSIGNEE:-$author}"
              echo "Assigning @$target to #$num"
              gh api -X POST \
                -H 'X-GitHub-Api-Version: 2022-11-28' \
                "/repos/$owner/$repo/issues/$num/assignees" \
                -f "assignees[]=$target"

              gh api -X POST \
                -H 'X-GitHub-Api-Version: 2022-11-28' \
                "/repos/$owner/$repo/issues/$num/comments" \
                -f body="Unblocked by #$source_issue (now closed). Assigned to @$target to keep things moving. âœ…"
            fi

            # Remove 'blocked' label if present (ignore if not)
            gh api -X DELETE \
              -H 'X-GitHub-Api-Version: 2022-11-28' \
              "/repos/$owner/$repo/issues/$num/labels/blocked" || true

          done < /tmp/blocked.json

      - name: Job summary
        run: |
          echo "### Unblocked issue assignment (Nexoroid)" >> "$GITHUB_STEP_SUMMARY"
          echo "- Closed issue: #${{ github.event.issue.number }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- Unblocked count: ${{ steps.blocked.outputs.count }}" >> "$GITHUB_STEP_SUMMARY"
